name: AW1000-24.10.0-LATEST

on:
  schedule:
    - cron: '0 20 * * *'  # 04 AM MALAYSIA TIME
  workflow_dispatch:

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt.git
  REPO_BRANCH: openwrt-24.10
  FEEDS_CONF: config/immortalwrt-openwrt-24.10/feeds.conf.default
  CONFIG_FILE: config/immortalwrt-openwrt-24.10/.config
  PATH_SCRIPT_01: config/immortalwrt-openwrt-24.10/01_path.sh
  PATH_SCRIPT_02: config/immortalwrt-openwrt-24.10/02_path.sh
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Kuala_Lumpur
  DEVICE_NAME: AW1000

jobs:
  build:
    runs-on: ubuntu-22.04
    if: ${{ github.event.repository.owner.id == github.event.sender.id }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialization environment
        id: init
        shell: bash
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi $(docker images -q) || true
          [[ -n "${AGENT_TOOLSDIRECTORY}" ]] && sudo rm -rf "${AGENT_TOOLSDIRECTORY}"
          sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d /usr/local/lib/android 2>/dev/null
          sudo -E apt-get -y update
          sudo -E apt-get -y purge azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
          sudo -E apt-get -y install $(curl -fsSL https://is.gd/depend_ubuntu2204_openwrt)
          sudo -E systemctl daemon-reload
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          sudo mkdir -p /workdir
          sudo chown ${USER}:${GROUPS} /workdir
          sudo timedatectl set-timezone "${TZ}"
          echo "status=success" >> "$GITHUB_ENV"

      - name: Clone source code [immortalwrt-openwrt-24.10]
        working-directory: /workdir
        run: |
          git clone -q --single-branch --depth=1 --branch=${REPO_BRANCH} ${REPO_URL} openwrt
          ln -sf /workdir/openwrt ${GITHUB_WORKSPACE}/openwrt

      - name: Load Custom Settings
        run: |
          cd openwrt
          mkdir -p files
          cd files
          git clone https://github.com/iFHax/etc.git

      - name: Load custom feeds
        run: |
          [[ -f "${FEEDS_CONF}" ]] && cp -f ${FEEDS_CONF} openwrt/feeds.conf.default
          chmod +x ${PATH_SCRIPT_01}
          cd openwrt/
          ${GITHUB_WORKSPACE}/${PATH_SCRIPT_01}

      - name: Update feeds
        run: cd openwrt/ && ./scripts/feeds update -a

      - name: Install feeds
        run: cd openwrt/ && ./scripts/feeds install -a

      - name: Load custom configuration
        run: |
          [[ -d "files" ]] && mv -f files openwrt/files
          [[ -e "${CONFIG_FILE}" ]] && cp -f ${CONFIG_FILE} openwrt/.config
          chmod +x ${PATH_SCRIPT_02}
          cd openwrt/
          ${GITHUB_WORKSPACE}/${PATH_SCRIPT_02}

      - name: Verify target device
        run: |
          if grep -q "CONFIG_TARGET_qualcommax_ipq807x_DEVICE_arcadyan_aw1000=y" openwrt/.config; then
            echo "✅ AW1000 device found in .config"
          else
            echo "❌ AW1000 device not found!"
            exit 1
          fi

      - name: Download packages
        run: |
          cd openwrt/
          make defconfig
          grep -q "CONFIG_TARGET_qualcommax_ipq807x_DEVICE_arcadyan_aw1000=y" .config || exit 1
          make download -j$(nproc)
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile the OpenWrt
        id: compile
        run: |
          cd openwrt/
          make -j$(nproc) || make -j1 V=s
          echo "COMPILE_SUCCESS=true" >> "$GITHUB_ENV"

      - name: Check space usage
        if: env.COMPILE_SUCCESS == 'true'
        run: df -hT

      - name: Upload bin directory
        uses: actions/upload-artifact@v4
        if: env.COMPILE_SUCCESS == 'true' && env.UPLOAD_BIN_DIR == 'true'
        with:
          name: OpenWrt_bin_${{ env.DEVICE_NAME }}_${{ github.run_number }}
          path: openwrt/bin

      - name: Organize firmware
        id: organize
        if: env.COMPILE_SUCCESS == 'true' && env.UPLOAD_FIRMWARE == 'true'
        run: |
          cd openwrt/bin/targets/*/*
          rm -rf packages
          echo "FIRMWARE_PATH=$PWD" >> "$GITHUB_ENV"

      - name: Upload firmware directory
        uses: actions/upload-artifact@v4
        if: env.FIRMWARE_PATH && env.UPLOAD_FIRMWARE == 'true'
        with:
          name: OpenWrt_firmware_${{ env.DEVICE_NAME }}_${{ github.run_number }}
          path: ${{ env.FIRMWARE_PATH }}

      - name: Generate release tag
        id: tag
        if: env.UPLOAD_RELEASE == 'true'
        run: |
          echo "release_tag=$(date +'%Y.%m.%d-%H%M')" >> "$GITHUB_OUTPUT"
          echo "🌐 **Firmware    :** ImmortalWrt" > release.txt
          echo "📅 **Build time  :** $(date)" >> release.txt
          echo "📁 **Target      :** AW1000" >> release.txt
          echo "🌐 **IP Address  :** 192.168.1.1" >> release.txt
          echo "🔑 **Password    :** -" >> release.txt

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        if: steps.tag.outputs.release_tag
        with:
          tag_name: ${{ steps.tag.outputs.release_tag }}
          body_path: release.txt
          files: ${{ env.FIRMWARE_PATH }}/*

      - name: Cleanup workflow runs
        uses: GitRML/delete-workflow-runs@v1
        with:
          retain_days: 1
          keep_minimum_runs: 3
          token: ${{ secrets.GH_TOKEN }}
