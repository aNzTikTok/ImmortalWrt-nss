name: Compile OpenWrt Plugin 2

on:
  workflow_dispatch:
    inputs:
      target:
        description: 'Target Platform/Architecture'
        required: true
        default: 'qualcommax/ipq807x'
      firmware_version:
        description: 'Firmware Version'
        required: true
        default: '24.10.0'
      plugin_source:
        description: 'Plugin Source URL'
        required: true
        default: 'https://github.com/aNzTikTok/luci-app-nfttl.git'

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential ccache ecj fastjar file g++ gawk \
        gettext git java-propose-classpath libelf-dev libncurses5-dev \
        libncursesw5-dev libssl-dev python3 python3-distutils python3-setuptools \
        unzip wget rsync subversion swig time xsltproc zlib1g-dev tree zstd

    - name: Set Python symlink
      run: sudo ln -sf /usr/bin/python3 /usr/bin/python

    - name: Set target variable
      id: set_target
      run: |
        echo "TARGET_DASH=$(echo ${{ github.event.inputs.target }} | sed 's|/|-|g')" >> $GITHUB_OUTPUT

    - name: Download and extract OpenWrt SDK
      run: |
        SDK_BASE_URL="https://downloads.openwrt.org/releases/${{ github.event.inputs.firmware_version }}/targets/${{ github.event.inputs.target }}/"
        SDK_FILE=$(curl -s $SDK_BASE_URL | grep -oP 'openwrt-sdk-.*?-${{ steps.set_target.outputs.TARGET_DASH }}_gcc-.*?Linux-x86_64\.tar\.(xz|zst)' | head -n 1)
        if [ -z "$SDK_FILE" ]; then
          echo "Unable to find matching SDK file"
          exit 1
        fi
        SDK_URL="${SDK_BASE_URL}${SDK_FILE}"
        echo "Downloading SDK: $SDK_URL"
        wget "$SDK_URL" -O openwrt.tar.${SDK_FILE##*.}
        mkdir openwrt
        if [[ "$SDK_FILE" == *.zst ]]; then
          tar --use-compress-program=unzstd -xvf openwrt.tar.zst -C openwrt --strip-components=1
        else
          tar -xJf openwrt.tar.xz -C openwrt --strip-components=1
        fi

    - name: Clone plugin source code
      working-directory: openwrt/package
      run: |
        git clone "${{ github.event.inputs.plugin_source }}" plugin
        cd plugin
        echo "PLUGIN_NAME=$(basename $(pwd))" >> $GITHUB_ENV
        echo "PLUGIN_VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo latest)" >> $GITHUB_ENV

    - name: Configure OpenWrt
      working-directory: openwrt
      run: |
        echo "CONFIG_PACKAGE_${PLUGIN_NAME}=m" >> .config
        make defconfig

    - name: Compile plugin
      working-directory: openwrt
      run: make package/${PLUGIN_NAME}/compile V=s

    - name: Organize files
      run: |
        mkdir -p firmware
        find openwrt/bin/packages/ -type f -name "${PLUGIN_NAME}*.ipk" -exec cp {} firmware/ \;
        cd firmware
        if compgen -G "*.ipk" > /dev/null; then
          for file in *.ipk; do
            mv "$file" "${{ steps.set_target.outputs.TARGET_DASH }}-${{ github.event.inputs.firmware_version }}-${PLUGIN_NAME}-${PLUGIN_VERSION}.ipk"
          done
        else
          echo "No IPK files found to rename!"
          exit 1
        fi
        ls -l

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: firmware/*
        name: ${{ steps.set_target.outputs.TARGET_DASH }}-${{ github.event.inputs.firmware_version }}-${PLUGIN_NAME}-${PLUGIN_VERSION}
        tag_name: v${{ github.event.inputs.firmware_version }}-${PLUGIN_NAME}-${PLUGIN_VERSION}
        body: |
          Target Platform/Architecture: ${{ github.event.inputs.target }}
          Firmware Version: ${{ github.event.inputs.firmware_version }}
          Plugin Source URL: ${{ github.event.inputs.plugin_source }}
          Plugin Version: ${{ env.PLUGIN_VERSION }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
